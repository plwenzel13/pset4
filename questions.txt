0.  BMP: Variable, depends on the number of bits specified in the header. 24 bits
    is common; this would give you 16.7 million colours. It can do 32-bit color,
    too, which would be 4.29 billion colors.
    JPEG: Supports 24-bit colour depth a.k.a. 16.7 million.
    PNG: 16.7 million.
    GIF: 256 max.

1.  GIF.

2.  Lossless writes the data in a more efficient way, while lossy is optimised for
    file size.

3.  JPEG.

4.  Two things:
    1. The system modifies the filename's first character to signal that it has
       been deleted and that the directory entry can be recycled.
       (Most OSs simply remove the file's reference from the containing dir.)
    2. The system moves all of the file's FAT clusters to the hard drive's list
       of free clusters.
    The file's data is never touched.
    
5.  Write NUL bytes (or random characters) to every address on the disk.
    There's consensus that "overwriting a disk with a few random passes" is 
    sufficient.
    
6.  stdint.h means Standard Integer Types

7.  these functions all allocate a specifice amount of declared or undeclared memory.

8.  BYTE = 8 bits = 1 byte
    DWORD= 32 bits = 4 bytes
    LONG = signed 32 bits = 4 bytes
    WORD = 16 bits = 2 bytes
    
9.  Hex:    0x424d
    ASCII:  BM (bitmap!)
    This value is stored in "bfType".
    
10. bfSize is the total number of bytes in the file (246 for smiley.bmp).
    biSize is the number of bytes in the info header (40 for a bitmap).

11. For uncompressed RGB bitmaps, if biHeight is positive, the bitmap is a bottom-
    up DIB with the origin at the lower left corner. If biHeight is negative, the
    bitmap is a top-down DIB with the origin at the upper left corner.
    
12. biBitCount.

13. If it can't find the file, it will.

14. Because it specifies how many elements you want to read, and we're always
    reading a struct so we only need 1 struct.
    
15. The padding would be 3, because 3 pixels * 3 bytes per pixel * 3 padding = 12,
    which is a multiple of 4.
    
16. It moves to a specific location in a file.

17. An integer constant which, when used as the 'whence' argument to the
    fseek or fseeko function, specifies that the offset provided is relative to
    the current file position.
    
18. Rick Ashley
